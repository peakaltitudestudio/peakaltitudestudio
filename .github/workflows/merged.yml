name: Delete Feature Branch After Merge

on:
  pull_request:
    types:
      - closed

jobs:
  check-delete-branch:
    runs-on: ubuntu-latest
    outputs:
      shouldDelete: ${{ steps.check.outputs.shouldDelete }}
    steps:
      - name: Check PR status
        id: check
        run: |
          baseBranch="${{ github.event.pull_request.base.ref }}"
          headBranch="${{ github.event.pull_request.head.ref }}"
          echo "$headBranch was merged into $baseBranch"
          if [ "$headBranch" == "main" ] || [ "$headBranch" == "dev" ]; then
            echo "$headBranch is a protected branch and will not be deleted"
            echo "shouldDelete=false" >> $GITHUB_OUTPUT
          else
            echo "Proceeding with deleting branch: $headBranch"
            echo "shouldDelete=true" >> $GITHUB_OUTPUT
          fi
    

  delete-branch:
    runs-on: ubuntu-latest
    needs: check-delete-branch
    if: needs.check-delete-branch.outputs.shouldDelete == 'true'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main
  
      - name: Configure AWS Usage
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
      - name: Delete Branch
        run: |
          echo "Running the branch deletion for branch: ${{ github.event.pull_request.head.ref }}"
          git fetch --prune
          git push --delete origin ${{ github.event.pull_request.head.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Destroy Branch Terraform
        run: |
          dirty_branch="${{ github.event.pull_request.head.ref }}"
          # Convert to lowercase, remove unwanted characters, and limit to 25 characters for target group limit (32)
          environment=$(echo "$dirty_branch" | tr 'A-Z' 'a-z' | tr -cd 'a-z0-9-' | cut -c -25)
          ./my_scripts/destroy-and-restore-backend-terraform.sh -e $environment
          echo "Remember to manually delete the s3 bucket for environment: $environment"